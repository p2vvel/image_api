version: '3.9'

services:
  redis:
    image: redis
  
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build: .
    command: bash -c "python manage.py migrate && python manage.py collectstatic --no-input && python manage.py createsuperuser --no-input && python manage.py loaddata base_tiers.json && python -m gunicorn --bind 0.0.0.0:8000 image_api.wsgi"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=postgres
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=image_api.production
      - DJANGO_SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_USERNAME=${SUPERUSER_NAME}
      - DJANGO_SUPERUSER_EMAIL=${SUPERUSER_NAME}@example.com
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - static:/static/
      - media:/images/
  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static:/static/
      - media:/images/
    depends_on:
      - api


volumes:
  static:
  media: